import wollok.game.*
import objetos.*

describe "test de futbol" {
    method initialize(){
		game.width(15)
		game.height(10)
	
	}

	test "lionel empieza donde esta la pelota"{
		assert.notEquals(lionel.position(), pelota.position())
    }
	
	test "taquito"{
		const posicionInicialPelota = pelota.position()
	    assert.throwsException({lionel.taquito()})
        assert.equals(posicionInicialPelota, pelota.position())
	}

	test "Patear"{
        lionel.position(game.at(5,5))
        lionel.patear()
        assert.equals(game.at(8, 5), pelota.position())
    } 
}   

describe "Lio entrena levantarla" {
	method initialize() {
		game.width(15)
		game.height(10)
	}
  	test "Lionel no puede levantar la pelota" {
		lionel.position(game.at(5,0))
		pelota.position(game.at(6,0))
		assert.throwsExceptionWithMessage("Lionel no esta en la misma posicion que la pelota", { lionel.levantarla() })
	}

	test "Lionel puede levantarla" {
		lionel.position(game.at(5,0))
		pelota.position(game.at(5,0))
		assert.equals(lionel.position(),pelota.position())

		// Consultar como testear en casos donde se utiliza schedule

		pelota.subir(1)
		pelota.bajar(1)
		assert.equals(lionel.position(),pelota.position())
	}
}